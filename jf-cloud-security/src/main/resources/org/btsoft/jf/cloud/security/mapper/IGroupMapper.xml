<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.btsoft.jf.cloud.security.mapper.IGroupMapper">
	<resultMap id="groupResultMap" type="org.btsoft.jf.cloud.security.entity.Group">
		<result column="app_code" property="appCode"/>
		<result column="enable_flag" property="enableFlag"/>
		<result column="create_by" property="createBy"/>
		<result column="creation_date" property="creationDate"/>
		<result column="last_update_by" property="lastUpdateBy"/>
		<result column="last_updation_date" property="lastUpdationDate"/>

		<result column="group_id" property="groupId"/>
		<result column="group_code" property="groupCode"/>
		<result column="group_name" property="groupName"/>
		<result column="group_owner" property="groupOwner"/>
		<result column="group_desc" property="groupDesc"/>
		<result column="apply_status" property="applyStatus"/>
	</resultMap>

	<sql id="base_sql">
		select
			t.group_id,
			t.group_code,
			t.group_name,
			t.group_owner,
			t.group_desc,
			t.apply_status,
			t.app_code,
			t.enable_flag,
			t.create_by,
			t.creation_date,
			t.last_update_by,
			t.last_updation_date
		from sys_group_t t
	</sql>

	<sql id="base_condition">
		<trim prefix="where" prefixOverrides="and || or">
		    t.app_code=#{vo.appCode,jdbcType=VARCHAR}
			<if test='vo.enableFlag!=null and vo.enableFlag!=""'>
                and t.enable_flag=#{vo.enableFlag,jdbcType=VARCHAR}
            </if>
            <if test='vo.createBy!=null and vo.createBy!=""'>
                and t.create_by=#{vo.createBy,jdbcType=NUMERIC}
            </if>
            <if test='vo.lastUpdateBy!=null and vo.lastUpdateBy!=""'>
                and t.last_update_by=#{vo.lastUpdateBy,jdbcType=NUMERIC}
            </if>
            <if test='vo.groupCode!=null and vo.groupCode!=""'>
                and t.group_code like concat('%',trim(#{vo.groupCode,jdbcType=VARCHAR}),'%')
            </if>
            <if test='vo.groupName!=null and vo.groupName!=""'>
                and t.group_name like concat('%',trim(#{vo.groupName,jdbcType=VARCHAR}),'%')
            </if>
		</trim>
	</sql>

	<insert id="createSingle" parameterType="org.btsoft.jf.cloud.security.entity.Group">
	    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="groupId">
          SELECT LAST_INSERT_ID()
        </selectKey>
		insert into sys_group_t (
			group_code,
			group_name,
			group_desc,
			group_owner,
			apply_status,
			app_code,
			create_by,
			last_update_by
		)values(
			#{vo.groupCode,jdbcType=VARCHAR},
			#{vo.groupName,jdbcType=VARCHAR},
			#{vo.groupDesc,jdbcType=VARCHAR},
			#{vo.groupOwner,jdbcType=NUMERIC},
			#{vo.applyStatus,jdbcType=VARCHAR},
			#{vo.appCode,jdbcType=VARCHAR},
			#{vo.currentUserId,jdbcType=NUMERIC},
			#{vo.currentUserId,jdbcType=NUMERIC}
		)
	</insert>

    <select id="findSingle" resultMap="groupResultMap">
        <include refid="base_sql"/>
        where t.group_id=#{vo.groupId,jdbcType=NUMERIC}
    </select>

	<delete id="deleteSingle">
		delete from sys_group_t where group_id=#{vo.groupId,jdbcType=NUMERIC}
	</delete>
	
	<delete id="deleteMultiple">
		delete from sys_group_t where
		<foreach collection="list" item="item" open=" group_id in(" separator="," close=")">
			#{item.groupId,jdbcType=NUMERIC}
		</foreach>
	</delete>

	<update id="updateSingle">
		update sys_group_t t set
			t.group_code=#{vo.groupCode,jdbcType=VARCHAR},
			t.group_name=#{vo.groupName,jdbcType=VARCHAR},
			t.group_desc=#{vo.groupDesc,jdbcType=VARCHAR},
			t.apply_status=#{vo.applyStatus,jdbcType=VARCHAR},
			t.group_owner=#{vo.groupOwner,jdbcType=NUMERIC},
			t.last_update_by=#{vo.currentUserId,jdbcType=NUMERIC},
			t.last_updation_date=now()
		where t.group_id=#{vo.groupId,jdbcType=NUMERIC}
	</update>

	<select id="findList" resultMap="groupResultMap">
		<include refid="base_sql"/>
		<include refid="base_condition"/>
	</select>

	<select id="findPageList" resultMap="groupResultMap">
		<include refid="base_sql"/>
		<include refid="base_condition"/>
		limit #{page.startIndex},#{page.pageSize}
	</select>

	<select id="findCount" resultType="int">
		select count(1) from sys_group_t t
		<include refid="base_condition"/>
	</select>

</mapper>